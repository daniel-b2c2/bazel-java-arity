bazel_dep(name = "rules_jvm_external", version = "6.0")
bazel_dep(name = "rules_java", version = "7.4.0")

# To update maven dependencies, update the lines below and then run:
# bazel run @unpinned_maven//:pin
maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        # Command line arg parsing
                "io.netty:netty-transport-native-epoll:jar:linux-x86_64:4.1.87.Final",
                "io.netty:netty-transport-native-epoll:jar:4.1.87.Final"
    ],
    lock_file = "//:maven_install.json",
    repositories = [
        "https://repo1.maven.org/maven2",
        "https://maven.google.com",
    ],
    fail_if_repin_required = True,
    fetch_sources = True,
)
use_repo(maven, "maven", "unpinned_maven")

# Buildifier
bazel_dep(
    name = "buildifier_prebuilt",
    version = "6.4.0",
    dev_dependency = True,
)

# rules_oci
bazel_dep(name = "aspect_bazel_lib", version = "2.5.0")
bazel_dep(name = "container_structure_test", version = "1.16.0")
bazel_dep(name = "rules_oci", version = "1.7.2")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "distroless_java",
    digest = "sha256:161a1d97d592b3f1919801578c3a47c8e932071168a96267698f4b669c24c76d",
    image = "gcr.io/distroless/java17",
    #platforms = ["linux/arm64"],
)
use_repo(oci, "distroless_java")

# rules_pkg (for creating .tar files, required by rules_oci)
bazel_dep(name = "rules_pkg", version = "0.10.1")

# gazelle
bazel_dep(name = "gazelle", version = "0.35.0")
bazel_dep(name = "rules_go", version = "0.46.0", repo_name = "io_bazel_rules_go")

# Additional JVM rules. Loaded at the end to avoid conflicts.
bazel_dep(name = "contrib_rules_jvm", version = "0.24.0")
